/**
 * $RCSfile: BroadcastPlugin.java,v $
 * $Revision: 3117 $
 * $Date: 2005-11-25 22:57:29 -0300 (Fri, 25 Nov 2005) $
 *
 * Copyright (C) 2004-2008 Jive Software. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.omertex.offliner.common;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import org.jivesoftware.openfire.IQRouter;
import org.jivesoftware.openfire.XMPPServer;
import org.jivesoftware.openfire.container.Plugin;
import org.jivesoftware.openfire.container.PluginManager;
import org.jivesoftware.openfire.handler.IQHandler;
import org.jivesoftware.openfire.interceptor.InterceptorManager;

import com.omertex.offliner.interceptors.ArchiveInterceptor;
import com.omertex.offliner.interceptors.TimestampInterceptor;
import com.omertex.offliner.iqhandlers.ChatAcceptorIQHandler;
import com.omertex.offliner.iqhandlers.ConferenceAcceptorIQHandler;
import com.omertex.offliner.iqhandlers.GetChatMessagesIQHandler;
import com.omertex.offliner.iqhandlers.GetConferenceMessagesIQHandler;
import com.omertex.offliner.utilites.Logger;

public class Offliner implements Plugin {
	
	private IQRouter iqRouter;
	
	private List<IQHandler> iqHandlers;
	
	private ArchiveInterceptor archiveInterceptor;
	
	private TimestampInterceptor timestampInterceptor;

    public Offliner() {
    	  	
    	try{
    		   	 		
	    		Initializer.Initialize();
	    		
	    		iqRouter = XMPPServer.getInstance().getIQRouter();  
	        	
	        	iqHandlers = new ArrayList<IQHandler>();
	        	
	        	iqHandlers.add(new GetConferenceMessagesIQHandler("GetConferenceMessagesIQHandler")); 
	        	iqHandlers.add(new GetChatMessagesIQHandler("GetChatMessagesIQHandler")); 
	        	iqHandlers.add(new ConferenceAcceptorIQHandler("MessageDeliveredAcceptorIQHandler","conference:messages:delivered"));
	        	iqHandlers.add(new ConferenceAcceptorIQHandler("MessageReadAcceptorIQHandler","conference:messages:read"));
	        	iqHandlers.add(new ChatAcceptorIQHandler("ChatMessageDeliveredAcceptorIQHandler","chat:messages:delivered"));
	        	iqHandlers.add(new ChatAcceptorIQHandler("ChatMessageReadAcceptorIQHandler","chat:messages:read"));
	    	
	        	archiveInterceptor = new ArchiveInterceptor();
	        	timestampInterceptor = new TimestampInterceptor();
	         
	    		Logger.Log("Start Offliner"); 		
    	}
    	catch(Exception e){
    		Logger.Log(e.getMessage());
    	}   	
    	
    }

    public void initializePlugin(PluginManager manager, File pluginDirectory) {
    	
    	for (IQHandler handler : iqHandlers) {
    		iqRouter.addHandler(handler); 
    	}
    	
    	InterceptorManager.getInstance().addInterceptor(0, timestampInterceptor);
    	InterceptorManager.getInstance().addInterceptor(1, archiveInterceptor);
    }

    public void destroyPlugin() {
    	
    	for (IQHandler handler : iqHandlers) {
    		iqRouter.removeHandler(handler); 
    	}
    	
    	InterceptorManager.getInstance().removeInterceptor(archiveInterceptor);
    	InterceptorManager.getInstance().removeInterceptor(timestampInterceptor);
    }
}