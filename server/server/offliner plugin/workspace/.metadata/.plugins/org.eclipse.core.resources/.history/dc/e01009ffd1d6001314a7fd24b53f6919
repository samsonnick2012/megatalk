/**
 * $RCSfile: BroadcastPlugin.java,v $
 * $Revision: 3117 $
 * $Date: 2005-11-25 22:57:29 -0300 (Fri, 25 Nov 2005) $
 *
 * Copyright (C) 2004-2008 Jive Software. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.jivesoftware.openfire.plugin;

import java.io.File;


import java.util.ArrayList;
import java.util.List;

import org.jivesoftware.openfire.IQRouter;
import org.jivesoftware.openfire.XMPPServer;
import org.jivesoftware.openfire.container.Plugin;
import org.jivesoftware.openfire.container.PluginManager;
import org.jivesoftware.openfire.handler.IQHandler;
import org.jivesoftware.openfire.plugin.data.DatabaseInitializer;
import org.jivesoftware.openfire.plugin.data.SqlAccess;
import org.jivesoftware.openfire.plugin.handlers.GetConferenceMessagesIQHandler;
import org.jivesoftware.openfire.plugin.handlers.MessageDeliveredAcceptorIQHandler;
import org.jivesoftware.openfire.plugin.handlers.MessageReadAcceptorIQHandler;

/**
 * Broadcast service plugin. It accepts messages and broadcasts them out to
 * groups of connected users. The address <tt>all@[serviceName].[server]</tt> is
 * reserved for sending a broadcast message to all connected users. Otherwise,
 * broadcast messages can be sent to groups of users by using addresses
 * in the form <tt>[group]@[serviceName].[server]</tt>.
 *
 * @author Matt Tucker
 */
public class Offliner implements Plugin {
	
	private IQRouter iqRouter;
	
	private List<IQHandler> iqHandlers;

    public Offliner() {
    	
    	iqRouter = XMPPServer.getInstance().getIQRouter();  
    	iqHandlers = new ArrayList<IQHandler>();
    	
    	iqHandlers.add(new GetConferenceMessagesIQHandler("GetConferenceMessagesIQHandler")); 
    	iqHandlers.add(new MessageDeliveredAcceptorIQHandler("MessageDeliveredAcceptorIQHandler"));
    	iqHandlers.add(new MessageReadAcceptorIQHandler("MessageReadAcceptorIQHandler"));
    	
    	Helper.RightToFile("Start Offliner X");
    	
    	try{
    		DatabaseInitializer.Initialize();
    	
    	}
    	catch(Exception e){
    		Helper.RightToFile(e.getMessage());
    	}
    	
    	
    }

    public void initializePlugin(PluginManager manager, File pluginDirectory) {
    	for (IQHandler handler : iqHandlers) {
    		iqRouter.addHandler(handler); 
    	}
    }

    public void destroyPlugin() {
    	for (IQHandler handler : iqHandlers) {
    		iqRouter.removeHandler(handler); 
    	}
    }
}